21 reduce/reduce conflicts
1 shift/reduce conflict
6 rules not reduced

warning: rule <record_args : ID EQ exp > will never be reduced
warning: rule <record_args : ID EQ exp COMMA record_args > will never be reduced
warning: rule <assigns : ID ASSIGN exp > will never be reduced
warning: rule <assigns : ID LBRACE record_args RBRACE > will never be reduced
warning: rule <assigns : ID LBRACK exp RBRACK OF exp > will never be reduced
warning: rule <exp : ID > will never be reduced
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on END
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on DO
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on TO
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on ELSE
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on THEN
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on OR
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on AND
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on GE
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on GT
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on LE
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on LT
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on NEQ
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on EQ
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on DIVIDE
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on TIMES
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on MINUS
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on PLUS
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on RPAREN
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on SEMICOLON
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on COMMA
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on EOF
error:  state 80: shift/reduce conflict (shift RPAREN, reduce by rule 3)

state 0:

	program : . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	LBRACE	shift 14
	MINUS	shift 13
	ARRAY	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6
	TYPE	shift 5

	exp	goto 4
	program	goto 94
	decs	goto 3
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 1:

	exp : func_exp .  (reduce by rule 31)



	.	reduce by rule 31


state 2:

	exp : mathExp .  (reduce by rule 23)



	.	reduce by rule 23


state 3:

	exp : decs .  (reduce by rule 32)



	.	reduce by rule 32


state 4:

	program : exp .  (reduce by rule 0)
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 0


state 5:

	decs : TYPE . ID EQ ID 

	ID	shift 31


	.	error


state 6:

	exp : NIL .  (reduce by rule 22)



	.	reduce by rule 22


state 7:

	exp : BREAK .  (reduce by rule 28)



	.	reduce by rule 28


state 8:

	exp : LET . decs IN exp_seq END 
	exp : LET . decs IN exp END 

	ID	shift 33
	LBRACE	shift 14
	ARRAY	shift 12
	TYPE	shift 5

	decs	goto 32

	.	error


state 9:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 34


	.	error


state 10:

	exp : WHILE . exp DO exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	LBRACE	shift 14
	MINUS	shift 13
	ARRAY	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6
	TYPE	shift 5

	exp	goto 35
	decs	goto 3
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 11:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	LBRACE	shift 14
	MINUS	shift 13
	ARRAY	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6
	TYPE	shift 5

	exp	goto 36
	decs	goto 3
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 12:

	decs : ARRAY . OF ID 

	OF	shift 37


	.	error


state 13:

	mathExp : MINUS . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	LBRACE	shift 14
	MINUS	shift 13
	ARRAY	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6
	TYPE	shift 5

	exp	goto 38
	decs	goto 3
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 14:

	decs : LBRACE . type_fields RBRACE 

	ID	shift 40

	type_fields	goto 39

	.	error


state 15:

	exp : LPAREN . exp RPAREN 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	LBRACE	shift 14
	MINUS	shift 13
	ARRAY	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6
	TYPE	shift 5

	exp	goto 41
	decs	goto 3
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 16:

	exp : STRING .  (reduce by rule 19)



	.	reduce by rule 19


state 17:

	mathExp : INT .  (reduce by rule 46)



	.	reduce by rule 46

error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on END
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on DO
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on TO
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on ELSE
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on THEN
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on OR
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on AND
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on GE
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on GT
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on LE
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on LT
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on NEQ
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on EQ
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on DIVIDE
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on TIMES
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on MINUS
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on PLUS
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on RPAREN
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on SEMICOLON
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on COMMA
error:  state 18: reduce/reduce conflict between rule 11 and rule 20 on EOF

state 18:

	exp : ID .  (reduce by rule 20)
	decs : ID .  (reduce by rule 11)
	func_exp : ID . LPAREN RPAREN 
	func_exp : ID . LPAREN func_args RPAREN 

	EOF	reduce by rule 11
	COMMA	reduce by rule 11
	SEMICOLON	reduce by rule 11
	LPAREN	shift 42
	RPAREN	reduce by rule 11
	PLUS	reduce by rule 11
	MINUS	reduce by rule 11
	TIMES	reduce by rule 11
	DIVIDE	reduce by rule 11
	EQ	reduce by rule 11
	NEQ	reduce by rule 11
	LT	reduce by rule 11
	LE	reduce by rule 11
	GT	reduce by rule 11
	GE	reduce by rule 11
	AND	reduce by rule 11
	OR	reduce by rule 11
	THEN	reduce by rule 11
	ELSE	reduce by rule 11
	TO	reduce by rule 11
	DO	reduce by rule 11
	END	reduce by rule 11


	.	error


state 19:

	mathExp : exp OR . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	LBRACE	shift 14
	MINUS	shift 13
	ARRAY	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6
	TYPE	shift 5

	exp	goto 43
	decs	goto 3
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 20:

	mathExp : exp AND . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	LBRACE	shift 14
	MINUS	shift 13
	ARRAY	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6
	TYPE	shift 5

	exp	goto 44
	decs	goto 3
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 21:

	mathExp : exp GE . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	LBRACE	shift 14
	MINUS	shift 13
	ARRAY	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6
	TYPE	shift 5

	exp	goto 45
	decs	goto 3
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 22:

	mathExp : exp GT . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	LBRACE	shift 14
	MINUS	shift 13
	ARRAY	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6
	TYPE	shift 5

	exp	goto 46
	decs	goto 3
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 23:

	mathExp : exp LE . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	LBRACE	shift 14
	MINUS	shift 13
	ARRAY	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6
	TYPE	shift 5

	exp	goto 47
	decs	goto 3
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 24:

	mathExp : exp LT . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	LBRACE	shift 14
	MINUS	shift 13
	ARRAY	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6
	TYPE	shift 5

	exp	goto 48
	decs	goto 3
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 25:

	mathExp : exp NEQ . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	LBRACE	shift 14
	MINUS	shift 13
	ARRAY	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6
	TYPE	shift 5

	exp	goto 49
	decs	goto 3
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 26:

	mathExp : exp EQ . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	LBRACE	shift 14
	MINUS	shift 13
	ARRAY	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6
	TYPE	shift 5

	exp	goto 50
	decs	goto 3
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 27:

	mathExp : exp DIVIDE . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	LBRACE	shift 14
	MINUS	shift 13
	ARRAY	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6
	TYPE	shift 5

	exp	goto 51
	decs	goto 3
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 28:

	mathExp : exp TIMES . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	LBRACE	shift 14
	MINUS	shift 13
	ARRAY	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6
	TYPE	shift 5

	exp	goto 52
	decs	goto 3
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 29:

	mathExp : exp MINUS . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	LBRACE	shift 14
	MINUS	shift 13
	ARRAY	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6
	TYPE	shift 5

	exp	goto 53
	decs	goto 3
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 30:

	mathExp : exp PLUS . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	LBRACE	shift 14
	MINUS	shift 13
	ARRAY	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6
	TYPE	shift 5

	exp	goto 54
	decs	goto 3
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 31:

	decs : TYPE ID . EQ ID 

	EQ	shift 55


	.	error


state 32:

	exp : LET decs . IN exp_seq END 
	exp : LET decs . IN exp END 

	IN	shift 56


	.	error


state 33:

	decs : ID .  (reduce by rule 11)



	.	reduce by rule 11


state 34:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 57


	.	error


state 35:

	exp : WHILE exp . DO exp 
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19
	DO	shift 58


	.	error


state 36:

	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19
	THEN	shift 59


	.	error


state 37:

	decs : ARRAY OF . ID 

	ID	shift 60


	.	error


state 38:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : MINUS exp .  (reduce by rule 37)
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 



	.	reduce by rule 37


state 39:

	decs : LBRACE type_fields . RBRACE 

	RBRACE	shift 61


	.	error


state 40:

	type_fields : ID . COLON ID 
	type_fields : ID . COLON ID COMMA type_fields 

	COLON	shift 62


	.	error


state 41:

	exp : LPAREN exp . RPAREN 
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	RPAREN	shift 63
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	error


state 42:

	func_exp : ID LPAREN . RPAREN 
	func_exp : ID LPAREN . func_args RPAREN 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	RPAREN	shift 66
	LBRACE	shift 14
	MINUS	shift 13
	ARRAY	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6
	TYPE	shift 5

	exp	goto 65
	decs	goto 3
	mathExp	goto 2
	func_exp	goto 1
	func_args	goto 64

	.	error


state 43:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 
	mathExp : exp OR exp .  (reduce by rule 45)

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20


	.	reduce by rule 45


state 44:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp AND exp .  (reduce by rule 44)
	mathExp : exp . OR exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21


	.	reduce by rule 44


state 45:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp GE exp .  (reduce by rule 42)
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	EOF	reduce by rule 42
	COMMA	reduce by rule 42
	SEMICOLON	reduce by rule 42
	RPAREN	reduce by rule 42
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	AND	reduce by rule 42
	OR	reduce by rule 42
	THEN	reduce by rule 42
	ELSE	reduce by rule 42
	TO	reduce by rule 42
	DO	reduce by rule 42
	END	reduce by rule 42


	.	error


state 46:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp GT exp .  (reduce by rule 40)
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	EOF	reduce by rule 40
	COMMA	reduce by rule 40
	SEMICOLON	reduce by rule 40
	RPAREN	reduce by rule 40
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	AND	reduce by rule 40
	OR	reduce by rule 40
	THEN	reduce by rule 40
	ELSE	reduce by rule 40
	TO	reduce by rule 40
	DO	reduce by rule 40
	END	reduce by rule 40


	.	error


state 47:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp LE exp .  (reduce by rule 43)
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	EOF	reduce by rule 43
	COMMA	reduce by rule 43
	SEMICOLON	reduce by rule 43
	RPAREN	reduce by rule 43
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	AND	reduce by rule 43
	OR	reduce by rule 43
	THEN	reduce by rule 43
	ELSE	reduce by rule 43
	TO	reduce by rule 43
	DO	reduce by rule 43
	END	reduce by rule 43


	.	error


state 48:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp LT exp .  (reduce by rule 41)
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	EOF	reduce by rule 41
	COMMA	reduce by rule 41
	SEMICOLON	reduce by rule 41
	RPAREN	reduce by rule 41
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	AND	reduce by rule 41
	OR	reduce by rule 41
	THEN	reduce by rule 41
	ELSE	reduce by rule 41
	TO	reduce by rule 41
	DO	reduce by rule 41
	END	reduce by rule 41


	.	error


state 49:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp NEQ exp .  (reduce by rule 39)
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	EOF	reduce by rule 39
	COMMA	reduce by rule 39
	SEMICOLON	reduce by rule 39
	RPAREN	reduce by rule 39
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	AND	reduce by rule 39
	OR	reduce by rule 39
	THEN	reduce by rule 39
	ELSE	reduce by rule 39
	TO	reduce by rule 39
	DO	reduce by rule 39
	END	reduce by rule 39


	.	error


state 50:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp EQ exp .  (reduce by rule 38)
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	EOF	reduce by rule 38
	COMMA	reduce by rule 38
	SEMICOLON	reduce by rule 38
	RPAREN	reduce by rule 38
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	AND	reduce by rule 38
	OR	reduce by rule 38
	THEN	reduce by rule 38
	ELSE	reduce by rule 38
	TO	reduce by rule 38
	DO	reduce by rule 38
	END	reduce by rule 38


	.	error


state 51:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp DIVIDE exp .  (reduce by rule 36)
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 



	.	reduce by rule 36


state 52:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp TIMES exp .  (reduce by rule 35)
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 



	.	reduce by rule 35


state 53:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp MINUS exp .  (reduce by rule 34)
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	TIMES	shift 28
	DIVIDE	shift 27


	.	reduce by rule 34


state 54:

	mathExp : exp . PLUS exp 
	mathExp : exp PLUS exp .  (reduce by rule 33)
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	TIMES	shift 28
	DIVIDE	shift 27


	.	reduce by rule 33


state 55:

	decs : TYPE ID EQ . ID 

	ID	shift 67


	.	error


state 56:

	exp : LET decs IN . exp_seq END 
	exp : LET decs IN . exp END 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 70
	LBRACE	shift 14
	MINUS	shift 13
	ARRAY	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6
	TYPE	shift 5

	exp	goto 69
	exp_seq	goto 68
	decs	goto 3
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 57:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	LBRACE	shift 14
	MINUS	shift 13
	ARRAY	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6
	TYPE	shift 5

	exp	goto 71
	decs	goto 3
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 58:

	exp : WHILE exp DO . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	LBRACE	shift 14
	MINUS	shift 13
	ARRAY	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6
	TYPE	shift 5

	exp	goto 72
	decs	goto 3
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 59:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	LBRACE	shift 14
	MINUS	shift 13
	ARRAY	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6
	TYPE	shift 5

	exp	goto 73
	decs	goto 3
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 60:

	decs : ARRAY OF ID .  (reduce by rule 13)



	.	reduce by rule 13


state 61:

	decs : LBRACE type_fields RBRACE .  (reduce by rule 12)



	.	reduce by rule 12


state 62:

	type_fields : ID COLON . ID 
	type_fields : ID COLON . ID COMMA type_fields 

	ID	shift 74


	.	error


state 63:

	exp : LPAREN exp RPAREN .  (reduce by rule 21)



	.	reduce by rule 21


state 64:

	func_exp : ID LPAREN func_args . RPAREN 

	RPAREN	shift 75


	.	error


state 65:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 
	func_args : exp .  (reduce by rule 4)
	func_args : exp . COMMA func_args 

	COMMA	shift 76
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 4


state 66:

	func_exp : ID LPAREN RPAREN .  (reduce by rule 17)



	.	reduce by rule 17


state 67:

	decs : TYPE ID EQ ID .  (reduce by rule 10)



	.	reduce by rule 10


state 68:

	exp : LET decs IN exp_seq . END 

	END	shift 77


	.	error


state 69:

	exp : LET decs IN exp . END 
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19
	END	shift 78


	.	error


state 70:

	exp : LPAREN . exp RPAREN 
	exp_seq : LPAREN . exp_list RPAREN 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	LBRACE	shift 14
	MINUS	shift 13
	ARRAY	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6
	TYPE	shift 5

	exp	goto 80
	exp_list	goto 79
	decs	goto 3
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 71:

	exp : FOR ID ASSIGN exp . TO exp DO exp 
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19
	TO	shift 81


	.	error


state 72:

	exp : WHILE exp DO exp .  (reduce by rule 26)
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 26


state 73:

	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 25)
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 25


state 74:

	type_fields : ID COLON ID .  (reduce by rule 8)
	type_fields : ID COLON ID . COMMA type_fields 

	COMMA	shift 83


	.	reduce by rule 8


state 75:

	func_exp : ID LPAREN func_args RPAREN .  (reduce by rule 18)



	.	reduce by rule 18


state 76:

	func_args : exp COMMA . func_args 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	LBRACE	shift 14
	MINUS	shift 13
	ARRAY	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6
	TYPE	shift 5

	exp	goto 65
	decs	goto 3
	mathExp	goto 2
	func_exp	goto 1
	func_args	goto 84

	.	error


state 77:

	exp : LET decs IN exp_seq END .  (reduce by rule 29)



	.	reduce by rule 29


state 78:

	exp : LET decs IN exp END .  (reduce by rule 30)



	.	reduce by rule 30


state 79:

	exp_seq : LPAREN exp_list . RPAREN 

	RPAREN	shift 85


	.	error

error:  state 80: shift/reduce conflict (shift RPAREN, reduce by rule 3)

state 80:

	exp : LPAREN exp . RPAREN 
	exp_list : exp . SEMICOLON exp_list 
	exp_list : exp .  (reduce by rule 3)
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	SEMICOLON	shift 86
	RPAREN	shift 63
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	error


state 81:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	LBRACE	shift 14
	MINUS	shift 13
	ARRAY	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6
	TYPE	shift 5

	exp	goto 87
	decs	goto 3
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 82:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	LBRACE	shift 14
	MINUS	shift 13
	ARRAY	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6
	TYPE	shift 5

	exp	goto 88
	decs	goto 3
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 83:

	type_fields : ID COLON ID COMMA . type_fields 

	ID	shift 40

	type_fields	goto 89

	.	error


state 84:

	func_args : exp COMMA func_args .  (reduce by rule 5)



	.	reduce by rule 5


state 85:

	exp_seq : LPAREN exp_list RPAREN .  (reduce by rule 1)



	.	reduce by rule 1


state 86:

	exp_list : exp SEMICOLON . exp_list 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	LBRACE	shift 14
	MINUS	shift 13
	ARRAY	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6
	TYPE	shift 5

	exp	goto 91
	exp_list	goto 90
	decs	goto 3
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 87:

	exp : FOR ID ASSIGN exp TO exp . DO exp 
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19
	DO	shift 92


	.	error


state 88:

	exp : IF exp THEN exp ELSE exp .  (reduce by rule 24)
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 24


state 89:

	type_fields : ID COLON ID COMMA type_fields .  (reduce by rule 9)



	.	reduce by rule 9


state 90:

	exp_list : exp SEMICOLON exp_list .  (reduce by rule 2)



	.	reduce by rule 2


state 91:

	exp_list : exp . SEMICOLON exp_list 
	exp_list : exp .  (reduce by rule 3)
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	SEMICOLON	shift 86
	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 3


state 92:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 18
	INT	shift 17
	STRING	shift 16
	LPAREN	shift 15
	LBRACE	shift 14
	MINUS	shift 13
	ARRAY	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6
	TYPE	shift 5

	exp	goto 93
	decs	goto 3
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 93:

	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 27)
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 30
	MINUS	shift 29
	TIMES	shift 28
	DIVIDE	shift 27
	EQ	shift 26
	NEQ	shift 25
	LT	shift 24
	LE	shift 23
	GT	shift 22
	GE	shift 21
	AND	shift 20
	OR	shift 19


	.	reduce by rule 27


state 94:


	EOF	accept


	.	error

379 of 825 action table entries left after compaction
121 goto table entries

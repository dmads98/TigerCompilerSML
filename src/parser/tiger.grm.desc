
state 0:

	program : . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 2
	program	goto 68
	mathExp	goto 1

	.	error


state 1:

	exp : mathExp .  (reduce by rule 8)



	.	reduce by rule 8


state 2:

	program : exp .  (reduce by rule 0)
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14


	.	reduce by rule 0


state 3:

	exp : NIL .  (reduce by rule 7)



	.	reduce by rule 7


state 4:

	exp : BREAK .  (reduce by rule 15)



	.	reduce by rule 15


state 5:

	exp : LET . decs IN exp_seq END 


	decs	goto 26

	.	error


state 6:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 27


	.	error


state 7:

	exp : WHILE . exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 28
	mathExp	goto 1

	.	error


state 8:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 29
	mathExp	goto 1

	.	error


state 9:

	mathExp : MINUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 30
	mathExp	goto 1

	.	error


state 10:

	exp : LPAREN . exp RPAREN 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 31
	mathExp	goto 1

	.	error


state 11:

	exp : STRING .  (reduce by rule 4)



	.	reduce by rule 4


state 12:

	mathExp : INT .  (reduce by rule 29)



	.	reduce by rule 29


state 13:

	exp : ID .  (reduce by rule 5)
	exp : ID . ASSIGN exp 

	ASSIGN	shift 32


	.	reduce by rule 5


state 14:

	mathExp : exp OR . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 33
	mathExp	goto 1

	.	error


state 15:

	mathExp : exp AND . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 34
	mathExp	goto 1

	.	error


state 16:

	mathExp : exp GE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 35
	mathExp	goto 1

	.	error


state 17:

	mathExp : exp GT . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 36
	mathExp	goto 1

	.	error


state 18:

	mathExp : exp LE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 37
	mathExp	goto 1

	.	error


state 19:

	mathExp : exp LT . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 38
	mathExp	goto 1

	.	error


state 20:

	mathExp : exp NEQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 39
	mathExp	goto 1

	.	error


state 21:

	mathExp : exp EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 40
	mathExp	goto 1

	.	error


state 22:

	mathExp : exp DIVIDE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 41
	mathExp	goto 1

	.	error


state 23:

	mathExp : exp TIMES . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 42
	mathExp	goto 1

	.	error


state 24:

	mathExp : exp MINUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 43
	mathExp	goto 1

	.	error


state 25:

	mathExp : exp PLUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 44
	mathExp	goto 1

	.	error


state 26:

	exp : LET decs . IN exp_seq END 

	IN	shift 45


	.	error


state 27:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 46


	.	error


state 28:

	exp : WHILE exp . DO exp 
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14
	DO	shift 47


	.	error


state 29:

	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14
	THEN	shift 48


	.	error


state 30:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : MINUS exp .  (reduce by rule 20)
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 



	.	reduce by rule 20


state 31:

	exp : LPAREN exp . RPAREN 
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	RPAREN	shift 49
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14


	.	error


state 32:

	exp : ID ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 50
	mathExp	goto 1

	.	error


state 33:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 
	mathExp : exp OR exp .  (reduce by rule 28)

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15


	.	reduce by rule 28


state 34:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp AND exp .  (reduce by rule 27)
	mathExp : exp . OR exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16


	.	reduce by rule 27


state 35:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp GE exp .  (reduce by rule 25)
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	EOF	reduce by rule 25
	SEMICOLON	reduce by rule 25
	RPAREN	reduce by rule 25
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	AND	reduce by rule 25
	OR	reduce by rule 25
	THEN	reduce by rule 25
	ELSE	reduce by rule 25
	TO	reduce by rule 25
	DO	reduce by rule 25


	.	error


state 36:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp GT exp .  (reduce by rule 23)
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	EOF	reduce by rule 23
	SEMICOLON	reduce by rule 23
	RPAREN	reduce by rule 23
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	AND	reduce by rule 23
	OR	reduce by rule 23
	THEN	reduce by rule 23
	ELSE	reduce by rule 23
	TO	reduce by rule 23
	DO	reduce by rule 23


	.	error


state 37:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp LE exp .  (reduce by rule 26)
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	EOF	reduce by rule 26
	SEMICOLON	reduce by rule 26
	RPAREN	reduce by rule 26
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	AND	reduce by rule 26
	OR	reduce by rule 26
	THEN	reduce by rule 26
	ELSE	reduce by rule 26
	TO	reduce by rule 26
	DO	reduce by rule 26


	.	error


state 38:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp LT exp .  (reduce by rule 24)
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	EOF	reduce by rule 24
	SEMICOLON	reduce by rule 24
	RPAREN	reduce by rule 24
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	AND	reduce by rule 24
	OR	reduce by rule 24
	THEN	reduce by rule 24
	ELSE	reduce by rule 24
	TO	reduce by rule 24
	DO	reduce by rule 24


	.	error


state 39:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp NEQ exp .  (reduce by rule 22)
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	EOF	reduce by rule 22
	SEMICOLON	reduce by rule 22
	RPAREN	reduce by rule 22
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	AND	reduce by rule 22
	OR	reduce by rule 22
	THEN	reduce by rule 22
	ELSE	reduce by rule 22
	TO	reduce by rule 22
	DO	reduce by rule 22


	.	error


state 40:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp EQ exp .  (reduce by rule 21)
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	EOF	reduce by rule 21
	SEMICOLON	reduce by rule 21
	RPAREN	reduce by rule 21
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	AND	reduce by rule 21
	OR	reduce by rule 21
	THEN	reduce by rule 21
	ELSE	reduce by rule 21
	TO	reduce by rule 21
	DO	reduce by rule 21


	.	error


state 41:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp DIVIDE exp .  (reduce by rule 19)
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 



	.	reduce by rule 19


state 42:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp TIMES exp .  (reduce by rule 18)
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 



	.	reduce by rule 18


state 43:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp MINUS exp .  (reduce by rule 17)
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	TIMES	shift 23
	DIVIDE	shift 22


	.	reduce by rule 17


state 44:

	mathExp : exp . PLUS exp 
	mathExp : exp PLUS exp .  (reduce by rule 16)
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	TIMES	shift 23
	DIVIDE	shift 22


	.	reduce by rule 16


state 45:

	exp : LET decs IN . exp_seq END 

	LPAREN	shift 52

	exp_seq	goto 51

	.	error


state 46:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 53
	mathExp	goto 1

	.	error


state 47:

	exp : WHILE exp DO . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 54
	mathExp	goto 1

	.	error


state 48:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 55
	mathExp	goto 1

	.	error


state 49:

	exp : LPAREN exp RPAREN .  (reduce by rule 6)



	.	reduce by rule 6


state 50:

	exp : ID ASSIGN exp .  (reduce by rule 11)
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14


	.	reduce by rule 11


state 51:

	exp : LET decs IN exp_seq . END 

	END	shift 56


	.	error


state 52:

	exp_seq : LPAREN . exp_list RPAREN 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 58
	exp_list	goto 57
	mathExp	goto 1

	.	error


state 53:

	exp : FOR ID ASSIGN exp . TO exp DO exp 
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14
	TO	shift 59


	.	error


state 54:

	exp : WHILE exp DO exp .  (reduce by rule 12)
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14


	.	reduce by rule 12


state 55:

	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 10)
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14


	.	reduce by rule 10


state 56:

	exp : LET decs IN exp_seq END .  (reduce by rule 14)



	.	reduce by rule 14


state 57:

	exp_seq : LPAREN exp_list . RPAREN 

	RPAREN	shift 61


	.	error


state 58:

	exp_list : exp . SEMICOLON exp_list 
	exp_list : exp .  (reduce by rule 3)
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	SEMICOLON	shift 62
	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14


	.	reduce by rule 3


state 59:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 63
	mathExp	goto 1

	.	error


state 60:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 64
	mathExp	goto 1

	.	error


state 61:

	exp_seq : LPAREN exp_list RPAREN .  (reduce by rule 1)



	.	reduce by rule 1


state 62:

	exp_list : exp SEMICOLON . exp_list 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 58
	exp_list	goto 65
	mathExp	goto 1

	.	error


state 63:

	exp : FOR ID ASSIGN exp TO exp . DO exp 
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14
	DO	shift 66


	.	error


state 64:

	exp : IF exp THEN exp ELSE exp .  (reduce by rule 9)
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14


	.	reduce by rule 9


state 65:

	exp_list : exp SEMICOLON exp_list .  (reduce by rule 2)



	.	reduce by rule 2


state 66:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 67
	mathExp	goto 1

	.	error


state 67:

	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 13)
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 25
	MINUS	shift 24
	TIMES	shift 23
	DIVIDE	shift 22
	EQ	shift 21
	NEQ	shift 20
	LT	shift 19
	LE	shift 18
	GT	shift 17
	GE	shift 16
	AND	shift 15
	OR	shift 14


	.	reduce by rule 13


state 68:


	EOF	accept


	.	error

272 of 616 action table entries left after compaction
57 goto table entries

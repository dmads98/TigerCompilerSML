structure Reg_Alloc:
sig
    structure Frame : FRAME
    type allocation = string Temp.Table.table
    val alloc : Assem.instr list * Frame.frame ->
		Assem.instr list * allocation
end
=
struct

structure Frame = MipsFrame
type allocation = string Temp.Table.table


fun alloc (instrList, frame) =
    let val (fg, nodeList) = MakeGraph.instrs2graph(instrList)
	val (igraph, getLiveOut) = Liveness.interferenceGraph(fg)
	val (alloc, spillList) = Color.color({intereference = igraph,
					      initial = Frame.getPreColoredAlloc(),
					      spillCost = (fn t => 1),
					      registers = Frame.getAllRegs()})
	val 
    in
	
    end
end

1 shift/reduce conflict

error:  state 110: shift/reduce conflict (shift RBRACE, reduce by rule 57)

state 0:

	program : . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 5
	program	goto 156
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 1:

	exp : structBuilder .  (reduce by rule 30)



	.	reduce by rule 30


state 2:

	exp : l_value .  (reduce by rule 18)
	exp : l_value . ASSIGN exp 
	l_value : l_value . LBRACK exp RBRACK 
	l_value : l_value . DOT ID 

	LBRACK	shift 19
	DOT	shift 18
	ASSIGN	shift 17


	.	reduce by rule 18


state 3:

	exp : func_exp .  (reduce by rule 32)



	.	reduce by rule 32


state 4:

	exp : mathExp .  (reduce by rule 24)



	.	reduce by rule 24


state 5:

	program : exp .  (reduce by rule 0)
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 0


state 6:

	exp : NIL .  (reduce by rule 23)



	.	reduce by rule 23


state 7:

	exp : BREAK .  (reduce by rule 29)



	.	reduce by rule 29


state 8:

	exp : LET . decList IN let_body END 

	FUNCTION	shift 38
	VAR	shift 37
	TYPE	shift 36

	typedec	goto 35
	funcdec	goto 34
	vardec	goto 33
	decList	goto 32

	.	reduce by rule 36


state 9:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 39


	.	error


state 10:

	exp : WHILE . exp DO exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 40
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 11:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 41
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 12:

	mathExp : MINUS . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 42
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 13:

	exp : LPAREN . exp RPAREN 
	exp : LPAREN . RPAREN 
	exp : LPAREN . exp SEMICOLON exp exp_seq RPAREN 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	RPAREN	shift 44
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 43
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 14:

	exp : STRING .  (reduce by rule 17)



	.	reduce by rule 17


state 15:

	mathExp : INT .  (reduce by rule 73)



	.	reduce by rule 73


state 16:

	func_exp : ID . LPAREN func_args RPAREN 
	l_value : ID .  (reduce by rule 13)
	l_value : ID . LBRACK exp RBRACK 
	structBuilder : ID . LBRACE record_args RBRACE 
	structBuilder : ID . LBRACK exp RBRACK OF exp 

	LPAREN	shift 47
	LBRACK	shift 46
	LBRACE	shift 45


	.	reduce by rule 13


state 17:

	exp : l_value ASSIGN . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 48
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 18:

	l_value : l_value DOT . ID 

	ID	shift 49


	.	error


state 19:

	l_value : l_value LBRACK . exp RBRACK 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 50
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 20:

	mathExp : exp OR . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 51
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 21:

	mathExp : exp AND . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 52
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 22:

	mathExp : exp GE . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 53
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 23:

	mathExp : exp GT . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 54
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 24:

	mathExp : exp LE . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 55
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 25:

	mathExp : exp LT . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 56
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 26:

	mathExp : exp NEQ . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 57
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 27:

	mathExp : exp EQ . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 58
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 28:

	mathExp : exp DIVIDE . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 59
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 29:

	mathExp : exp TIMES . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 60
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 30:

	mathExp : exp MINUS . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 61
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 31:

	mathExp : exp PLUS . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 62
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 32:

	exp : LET decList . IN let_body END 

	IN	shift 63


	.	error


state 33:

	decList : vardec . decList 

	FUNCTION	shift 38
	VAR	shift 37
	TYPE	shift 36

	typedec	goto 35
	funcdec	goto 34
	vardec	goto 33
	decList	goto 64

	.	reduce by rule 36


state 34:

	decList : funcdec . nfuncdec 

	VAR	shift 37
	TYPE	shift 36

	typedec	goto 67
	vardec	goto 66
	nfuncdec	goto 65

	.	reduce by rule 42


state 35:

	decList : typedec . ntypedec 

	FUNCTION	shift 38
	VAR	shift 37

	funcdec	goto 70
	vardec	goto 69
	ntypedec	goto 68

	.	reduce by rule 39


state 36:

	typedec : TYPE . ID EQ ty 
	typedec : TYPE . ID EQ ty typedec 

	ID	shift 71


	.	error


state 37:

	vardec : VAR . ID COLON ID ASSIGN exp 
	vardec : VAR . ID ASSIGN exp 

	ID	shift 72


	.	error


state 38:

	funcdec : FUNCTION . ID LPAREN type_fields RPAREN COLON ID EQ exp 
	funcdec : FUNCTION . ID LPAREN type_fields RPAREN COLON ID EQ exp funcdec 
	funcdec : FUNCTION . ID LPAREN type_fields RPAREN EQ exp 
	funcdec : FUNCTION . ID LPAREN type_fields RPAREN EQ exp funcdec 

	ID	shift 73


	.	error


state 39:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 74


	.	error


state 40:

	exp : WHILE exp . DO exp 
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20
	DO	shift 75


	.	error


state 41:

	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20
	THEN	shift 76


	.	error


state 42:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : MINUS exp .  (reduce by rule 64)
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 



	.	reduce by rule 64


state 43:

	exp : LPAREN exp . RPAREN 
	exp : LPAREN exp . SEMICOLON exp exp_seq RPAREN 
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	SEMICOLON	shift 78
	RPAREN	shift 77
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	error


state 44:

	exp : LPAREN RPAREN .  (reduce by rule 21)



	.	reduce by rule 21


state 45:

	structBuilder : ID LBRACE . record_args RBRACE 

	ID	shift 80

	record_args	goto 79

	.	reduce by rule 5


state 46:

	l_value : ID LBRACK . exp RBRACK 
	structBuilder : ID LBRACK . exp RBRACK OF exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 81
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 47:

	func_exp : ID LPAREN . func_args RPAREN 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 83
	mathExp	goto 4
	func_exp	goto 3
	func_args	goto 82
	l_value	goto 2
	structBuilder	goto 1

	.	reduce by rule 9


state 48:

	exp : l_value ASSIGN exp .  (reduce by rule 19)
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 19


state 49:

	l_value : l_value DOT ID .  (reduce by rule 15)



	.	reduce by rule 15


state 50:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 
	l_value : l_value LBRACK exp . RBRACK 

	RBRACK	shift 84
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	error


state 51:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 
	mathExp : exp OR exp .  (reduce by rule 72)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21


	.	reduce by rule 72


state 52:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp AND exp .  (reduce by rule 71)
	mathExp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22


	.	reduce by rule 71


state 53:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp GE exp .  (reduce by rule 69)
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	EOF	reduce by rule 69
	COMMA	reduce by rule 69
	SEMICOLON	reduce by rule 69
	RPAREN	reduce by rule 69
	RBRACK	reduce by rule 69
	RBRACE	reduce by rule 69
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	AND	reduce by rule 69
	OR	reduce by rule 69
	THEN	reduce by rule 69
	ELSE	reduce by rule 69
	TO	reduce by rule 69
	DO	reduce by rule 69
	IN	reduce by rule 69
	END	reduce by rule 69
	FUNCTION	reduce by rule 69
	VAR	reduce by rule 69
	TYPE	reduce by rule 69


	.	error


state 54:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp GT exp .  (reduce by rule 67)
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	EOF	reduce by rule 67
	COMMA	reduce by rule 67
	SEMICOLON	reduce by rule 67
	RPAREN	reduce by rule 67
	RBRACK	reduce by rule 67
	RBRACE	reduce by rule 67
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	AND	reduce by rule 67
	OR	reduce by rule 67
	THEN	reduce by rule 67
	ELSE	reduce by rule 67
	TO	reduce by rule 67
	DO	reduce by rule 67
	IN	reduce by rule 67
	END	reduce by rule 67
	FUNCTION	reduce by rule 67
	VAR	reduce by rule 67
	TYPE	reduce by rule 67


	.	error


state 55:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp LE exp .  (reduce by rule 70)
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	EOF	reduce by rule 70
	COMMA	reduce by rule 70
	SEMICOLON	reduce by rule 70
	RPAREN	reduce by rule 70
	RBRACK	reduce by rule 70
	RBRACE	reduce by rule 70
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	AND	reduce by rule 70
	OR	reduce by rule 70
	THEN	reduce by rule 70
	ELSE	reduce by rule 70
	TO	reduce by rule 70
	DO	reduce by rule 70
	IN	reduce by rule 70
	END	reduce by rule 70
	FUNCTION	reduce by rule 70
	VAR	reduce by rule 70
	TYPE	reduce by rule 70


	.	error


state 56:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp LT exp .  (reduce by rule 68)
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	EOF	reduce by rule 68
	COMMA	reduce by rule 68
	SEMICOLON	reduce by rule 68
	RPAREN	reduce by rule 68
	RBRACK	reduce by rule 68
	RBRACE	reduce by rule 68
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	AND	reduce by rule 68
	OR	reduce by rule 68
	THEN	reduce by rule 68
	ELSE	reduce by rule 68
	TO	reduce by rule 68
	DO	reduce by rule 68
	IN	reduce by rule 68
	END	reduce by rule 68
	FUNCTION	reduce by rule 68
	VAR	reduce by rule 68
	TYPE	reduce by rule 68


	.	error


state 57:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp NEQ exp .  (reduce by rule 66)
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	EOF	reduce by rule 66
	COMMA	reduce by rule 66
	SEMICOLON	reduce by rule 66
	RPAREN	reduce by rule 66
	RBRACK	reduce by rule 66
	RBRACE	reduce by rule 66
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	AND	reduce by rule 66
	OR	reduce by rule 66
	THEN	reduce by rule 66
	ELSE	reduce by rule 66
	TO	reduce by rule 66
	DO	reduce by rule 66
	IN	reduce by rule 66
	END	reduce by rule 66
	FUNCTION	reduce by rule 66
	VAR	reduce by rule 66
	TYPE	reduce by rule 66


	.	error


state 58:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp EQ exp .  (reduce by rule 65)
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	EOF	reduce by rule 65
	COMMA	reduce by rule 65
	SEMICOLON	reduce by rule 65
	RPAREN	reduce by rule 65
	RBRACK	reduce by rule 65
	RBRACE	reduce by rule 65
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	AND	reduce by rule 65
	OR	reduce by rule 65
	THEN	reduce by rule 65
	ELSE	reduce by rule 65
	TO	reduce by rule 65
	DO	reduce by rule 65
	IN	reduce by rule 65
	END	reduce by rule 65
	FUNCTION	reduce by rule 65
	VAR	reduce by rule 65
	TYPE	reduce by rule 65


	.	error


state 59:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp DIVIDE exp .  (reduce by rule 63)
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 



	.	reduce by rule 63


state 60:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp TIMES exp .  (reduce by rule 62)
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 



	.	reduce by rule 62


state 61:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp MINUS exp .  (reduce by rule 61)
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	TIMES	shift 29
	DIVIDE	shift 28


	.	reduce by rule 61


state 62:

	mathExp : exp . PLUS exp 
	mathExp : exp PLUS exp .  (reduce by rule 60)
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	TIMES	shift 29
	DIVIDE	shift 28


	.	reduce by rule 60


state 63:

	exp : LET decList IN . let_body END 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 86
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1
	let_body	goto 85

	.	reduce by rule 44


state 64:

	decList : vardec decList .  (reduce by rule 35)



	.	reduce by rule 35


state 65:

	decList : funcdec nfuncdec .  (reduce by rule 33)



	.	reduce by rule 33


state 66:

	nfuncdec : vardec . decList 

	FUNCTION	shift 38
	VAR	shift 37
	TYPE	shift 36

	typedec	goto 35
	funcdec	goto 34
	vardec	goto 33
	decList	goto 87

	.	reduce by rule 36


state 67:

	nfuncdec : typedec . ntypedec 

	FUNCTION	shift 38
	VAR	shift 37

	funcdec	goto 70
	vardec	goto 69
	ntypedec	goto 88

	.	reduce by rule 39


state 68:

	decList : typedec ntypedec .  (reduce by rule 34)



	.	reduce by rule 34


state 69:

	ntypedec : vardec . decList 

	FUNCTION	shift 38
	VAR	shift 37
	TYPE	shift 36

	typedec	goto 35
	funcdec	goto 34
	vardec	goto 33
	decList	goto 89

	.	reduce by rule 36


state 70:

	ntypedec : funcdec . nfuncdec 

	VAR	shift 37
	TYPE	shift 36

	typedec	goto 67
	vardec	goto 66
	nfuncdec	goto 90

	.	reduce by rule 42


state 71:

	typedec : TYPE ID . EQ ty 
	typedec : TYPE ID . EQ ty typedec 

	EQ	shift 91


	.	error


state 72:

	vardec : VAR ID . COLON ID ASSIGN exp 
	vardec : VAR ID . ASSIGN exp 

	COLON	shift 93
	ASSIGN	shift 92


	.	error


state 73:

	funcdec : FUNCTION ID . LPAREN type_fields RPAREN COLON ID EQ exp 
	funcdec : FUNCTION ID . LPAREN type_fields RPAREN COLON ID EQ exp funcdec 
	funcdec : FUNCTION ID . LPAREN type_fields RPAREN EQ exp 
	funcdec : FUNCTION ID . LPAREN type_fields RPAREN EQ exp funcdec 

	LPAREN	shift 94


	.	error


state 74:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 95
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 75:

	exp : WHILE exp DO . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 96
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 76:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 97
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 77:

	exp : LPAREN exp RPAREN .  (reduce by rule 20)



	.	reduce by rule 20


state 78:

	exp : LPAREN exp SEMICOLON . exp exp_seq RPAREN 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 98
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 79:

	structBuilder : ID LBRACE record_args . RBRACE 

	RBRACE	shift 99


	.	error


state 80:

	record_args : ID . EQ exp 
	record_args : ID . EQ exp COMMA record_args 

	EQ	shift 100


	.	error


state 81:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 
	l_value : ID LBRACK exp . RBRACK 
	structBuilder : ID LBRACK exp . RBRACK OF exp 

	RBRACK	shift 101
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	error


state 82:

	func_exp : ID LPAREN func_args . RPAREN 

	RPAREN	shift 102


	.	error


state 83:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 
	func_args : exp . func_args_seq 

	COMMA	shift 104
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20

	func_args_seq	goto 103

	.	reduce by rule 12


state 84:

	l_value : l_value LBRACK exp RBRACK .  (reduce by rule 14)



	.	reduce by rule 14


state 85:

	exp : LET decList IN let_body . END 

	END	shift 105


	.	error


state 86:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 
	let_body : exp . exp_seq 

	SEMICOLON	shift 107
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20

	exp_seq	goto 106

	.	reduce by rule 2


state 87:

	nfuncdec : vardec decList .  (reduce by rule 40)



	.	reduce by rule 40


state 88:

	nfuncdec : typedec ntypedec .  (reduce by rule 41)



	.	reduce by rule 41


state 89:

	ntypedec : vardec decList .  (reduce by rule 37)



	.	reduce by rule 37


state 90:

	ntypedec : funcdec nfuncdec .  (reduce by rule 38)



	.	reduce by rule 38


state 91:

	typedec : TYPE ID EQ . ty 
	typedec : TYPE ID EQ . ty typedec 

	ID	shift 111
	LBRACE	shift 110
	ARRAY	shift 109

	ty	goto 108

	.	error


state 92:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 112
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 93:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 113


	.	error


state 94:

	funcdec : FUNCTION ID LPAREN . type_fields RPAREN COLON ID EQ exp 
	funcdec : FUNCTION ID LPAREN . type_fields RPAREN COLON ID EQ exp funcdec 
	funcdec : FUNCTION ID LPAREN . type_fields RPAREN EQ exp 
	funcdec : FUNCTION ID LPAREN . type_fields RPAREN EQ exp funcdec 

	ID	shift 115

	type_fields	goto 114

	.	reduce by rule 57


state 95:

	exp : FOR ID ASSIGN exp . TO exp DO exp 
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20
	TO	shift 116


	.	error


state 96:

	exp : WHILE exp DO exp .  (reduce by rule 27)
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 27


state 97:

	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 26)
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20
	ELSE	shift 117


	.	reduce by rule 26


state 98:

	exp : LPAREN exp SEMICOLON exp . exp_seq RPAREN 
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	SEMICOLON	shift 107
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20

	exp_seq	goto 118

	.	reduce by rule 2


state 99:

	structBuilder : ID LBRACE record_args RBRACE .  (reduce by rule 6)



	.	reduce by rule 6


state 100:

	record_args : ID EQ . exp 
	record_args : ID EQ . exp COMMA record_args 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 119
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 101:

	l_value : ID LBRACK exp RBRACK .  (reduce by rule 16)
	structBuilder : ID LBRACK exp RBRACK . OF exp 

	OF	shift 120


	.	reduce by rule 16


state 102:

	func_exp : ID LPAREN func_args RPAREN .  (reduce by rule 8)



	.	reduce by rule 8


state 103:

	func_args : exp func_args_seq .  (reduce by rule 10)



	.	reduce by rule 10


state 104:

	func_args_seq : COMMA . exp func_args_seq 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 121
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 105:

	exp : LET decList IN let_body END .  (reduce by rule 31)



	.	reduce by rule 31


state 106:

	let_body : exp exp_seq .  (reduce by rule 43)



	.	reduce by rule 43


state 107:

	exp_seq : SEMICOLON . exp exp_seq 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 122
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 108:

	typedec : TYPE ID EQ ty .  (reduce by rule 51)
	typedec : TYPE ID EQ ty . typedec 

	TYPE	shift 36

	typedec	goto 123

	.	reduce by rule 51


state 109:

	ty : ARRAY . OF ID 

	OF	shift 124


	.	error

error:  state 110: shift/reduce conflict (shift RBRACE, reduce by rule 57)

state 110:

	ty : LBRACE . RBRACE 
	ty : LBRACE . type_fields RBRACE 

	ID	shift 115
	RBRACE	shift 126

	type_fields	goto 125

	.	reduce by rule 57


state 111:

	ty : ID .  (reduce by rule 54)



	.	reduce by rule 54


state 112:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 50)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 50


state 113:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 127


	.	error


state 114:

	type_fields : type_fields . COMMA ID COLON ID 
	funcdec : FUNCTION ID LPAREN type_fields . RPAREN COLON ID EQ exp 
	funcdec : FUNCTION ID LPAREN type_fields . RPAREN COLON ID EQ exp funcdec 
	funcdec : FUNCTION ID LPAREN type_fields . RPAREN EQ exp 
	funcdec : FUNCTION ID LPAREN type_fields . RPAREN EQ exp funcdec 

	COMMA	shift 129
	RPAREN	shift 128


	.	error


state 115:

	type_fields : ID . COLON ID 

	COLON	shift 130


	.	error


state 116:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 131
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 117:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 132
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 118:

	exp : LPAREN exp SEMICOLON exp exp_seq . RPAREN 

	RPAREN	shift 133


	.	error


state 119:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 
	record_args : ID EQ exp .  (reduce by rule 3)
	record_args : ID EQ exp . COMMA record_args 

	COMMA	shift 134
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 3


state 120:

	structBuilder : ID LBRACK exp RBRACK OF . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 135
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 121:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 
	func_args_seq : COMMA exp . func_args_seq 

	COMMA	shift 104
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20

	func_args_seq	goto 136

	.	reduce by rule 12


state 122:

	exp_seq : SEMICOLON exp . exp_seq 
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	SEMICOLON	shift 107
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20

	exp_seq	goto 137

	.	reduce by rule 2


state 123:

	typedec : TYPE ID EQ ty typedec .  (reduce by rule 52)



	.	reduce by rule 52


state 124:

	ty : ARRAY OF . ID 

	ID	shift 138


	.	error


state 125:

	type_fields : type_fields . COMMA ID COLON ID 
	ty : LBRACE type_fields . RBRACE 

	COMMA	shift 129
	RBRACE	shift 139


	.	error


state 126:

	ty : LBRACE RBRACE .  (reduce by rule 55)



	.	reduce by rule 55


state 127:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 140
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 128:

	funcdec : FUNCTION ID LPAREN type_fields RPAREN . COLON ID EQ exp 
	funcdec : FUNCTION ID LPAREN type_fields RPAREN . COLON ID EQ exp funcdec 
	funcdec : FUNCTION ID LPAREN type_fields RPAREN . EQ exp 
	funcdec : FUNCTION ID LPAREN type_fields RPAREN . EQ exp funcdec 

	COLON	shift 142
	EQ	shift 141


	.	error


state 129:

	type_fields : type_fields COMMA . ID COLON ID 

	ID	shift 143


	.	error


state 130:

	type_fields : ID COLON . ID 

	ID	shift 144


	.	error


state 131:

	exp : FOR ID ASSIGN exp TO exp . DO exp 
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20
	DO	shift 145


	.	error


state 132:

	exp : IF exp THEN exp ELSE exp .  (reduce by rule 25)
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 25


state 133:

	exp : LPAREN exp SEMICOLON exp exp_seq RPAREN .  (reduce by rule 22)



	.	reduce by rule 22


state 134:

	record_args : ID EQ exp COMMA . record_args 

	ID	shift 80

	record_args	goto 146

	.	reduce by rule 5


state 135:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 
	structBuilder : ID LBRACK exp RBRACK OF exp .  (reduce by rule 7)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 7


state 136:

	func_args_seq : COMMA exp func_args_seq .  (reduce by rule 11)



	.	reduce by rule 11


state 137:

	exp_seq : SEMICOLON exp exp_seq .  (reduce by rule 1)



	.	reduce by rule 1


state 138:

	ty : ARRAY OF ID .  (reduce by rule 53)



	.	reduce by rule 53


state 139:

	ty : LBRACE type_fields RBRACE .  (reduce by rule 56)



	.	reduce by rule 56


state 140:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 
	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 49)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 49


state 141:

	funcdec : FUNCTION ID LPAREN type_fields RPAREN EQ . exp 
	funcdec : FUNCTION ID LPAREN type_fields RPAREN EQ . exp funcdec 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 147
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 142:

	funcdec : FUNCTION ID LPAREN type_fields RPAREN COLON . ID EQ exp 
	funcdec : FUNCTION ID LPAREN type_fields RPAREN COLON . ID EQ exp funcdec 

	ID	shift 148


	.	error


state 143:

	type_fields : type_fields COMMA ID . COLON ID 

	COLON	shift 149


	.	error


state 144:

	type_fields : ID COLON ID .  (reduce by rule 58)



	.	reduce by rule 58


state 145:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 150
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 146:

	record_args : ID EQ exp COMMA record_args .  (reduce by rule 4)



	.	reduce by rule 4


state 147:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 
	funcdec : FUNCTION ID LPAREN type_fields RPAREN EQ exp .  (reduce by rule 47)
	funcdec : FUNCTION ID LPAREN type_fields RPAREN EQ exp . funcdec 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20
	FUNCTION	shift 38

	funcdec	goto 151

	.	reduce by rule 47


state 148:

	funcdec : FUNCTION ID LPAREN type_fields RPAREN COLON ID . EQ exp 
	funcdec : FUNCTION ID LPAREN type_fields RPAREN COLON ID . EQ exp funcdec 

	EQ	shift 152


	.	error


state 149:

	type_fields : type_fields COMMA ID COLON . ID 

	ID	shift 153


	.	error


state 150:

	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 28)
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 28


state 151:

	funcdec : FUNCTION ID LPAREN type_fields RPAREN EQ exp funcdec .  (reduce by rule 48)



	.	reduce by rule 48


state 152:

	funcdec : FUNCTION ID LPAREN type_fields RPAREN COLON ID EQ . exp 
	funcdec : FUNCTION ID LPAREN type_fields RPAREN COLON ID EQ . exp funcdec 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 154
	mathExp	goto 4
	func_exp	goto 3
	l_value	goto 2
	structBuilder	goto 1

	.	error


state 153:

	type_fields : type_fields COMMA ID COLON ID .  (reduce by rule 59)



	.	reduce by rule 59


state 154:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 
	funcdec : FUNCTION ID LPAREN type_fields RPAREN COLON ID EQ exp .  (reduce by rule 45)
	funcdec : FUNCTION ID LPAREN type_fields RPAREN COLON ID EQ exp . funcdec 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20
	FUNCTION	shift 38

	funcdec	goto 155

	.	reduce by rule 45


state 155:

	funcdec : FUNCTION ID LPAREN type_fields RPAREN COLON ID EQ exp funcdec .  (reduce by rule 46)



	.	reduce by rule 46


state 156:


	EOF	accept


	.	error

518 of 1091 action table entries left after compaction
229 goto table entries

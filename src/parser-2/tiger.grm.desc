
state 0:

	program : . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 3
	program	goto 84
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 1:

	exp : func_exp .  (reduce by rule 22)



	.	reduce by rule 22


state 2:

	exp : mathExp .  (reduce by rule 14)



	.	reduce by rule 14


state 3:

	program : exp .  (reduce by rule 0)
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 0


state 4:

	exp : NIL .  (reduce by rule 13)



	.	reduce by rule 13


state 5:

	exp : BREAK .  (reduce by rule 20)



	.	reduce by rule 20


state 6:

	exp : LET . decs IN exp_seq END 


	decs	goto 27

	.	error


state 7:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 28


	.	error


state 8:

	exp : WHILE . exp DO exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 29
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 9:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 30
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 10:

	mathExp : MINUS . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 31
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 11:

	exp : LPAREN . exp RPAREN 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 32
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 12:

	exp : STRING .  (reduce by rule 10)



	.	reduce by rule 10


state 13:

	mathExp : INT .  (reduce by rule 37)



	.	reduce by rule 37


state 14:

	exp : ID .  (reduce by rule 11)
	exp : ID . ASSIGN exp 
	exp : ID . LBRACE record_args RBRACE 
	func_exp : ID . LPAREN RPAREN 
	func_exp : ID . LPAREN func_args RPAREN 

	LPAREN	shift 35
	LBRACE	shift 34
	ASSIGN	shift 33


	.	reduce by rule 11


state 15:

	mathExp : exp OR . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 36
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 16:

	mathExp : exp AND . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 37
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 17:

	mathExp : exp GE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 38
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 18:

	mathExp : exp GT . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 39
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 19:

	mathExp : exp LE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 40
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 20:

	mathExp : exp LT . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 41
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 21:

	mathExp : exp NEQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 42
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 22:

	mathExp : exp EQ . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 43
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 23:

	mathExp : exp DIVIDE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 44
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 24:

	mathExp : exp TIMES . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 45
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 25:

	mathExp : exp MINUS . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 46
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 26:

	mathExp : exp PLUS . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 47
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 27:

	exp : LET decs . IN exp_seq END 

	IN	shift 48


	.	error


state 28:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 49


	.	error


state 29:

	exp : WHILE exp . DO exp 
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15
	DO	shift 50


	.	error


state 30:

	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15
	THEN	shift 51


	.	error


state 31:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : MINUS exp .  (reduce by rule 28)
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 



	.	reduce by rule 28


state 32:

	exp : LPAREN exp . RPAREN 
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	RPAREN	shift 52
	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	error


state 33:

	exp : ID ASSIGN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 53
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 34:

	exp : ID LBRACE . record_args RBRACE 

	ID	shift 55

	record_args	goto 54

	.	error


state 35:

	func_exp : ID LPAREN . RPAREN 
	func_exp : ID LPAREN . func_args RPAREN 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	RPAREN	shift 58
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 57
	mathExp	goto 2
	func_exp	goto 1
	func_args	goto 56

	.	error


state 36:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 
	mathExp : exp OR exp .  (reduce by rule 36)

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16


	.	reduce by rule 36


state 37:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp AND exp .  (reduce by rule 35)
	mathExp : exp . OR exp 

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17


	.	reduce by rule 35


state 38:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp GE exp .  (reduce by rule 33)
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	EOF	reduce by rule 33
	COMMA	reduce by rule 33
	SEMICOLON	reduce by rule 33
	RPAREN	reduce by rule 33
	RBRACE	reduce by rule 33
	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	AND	reduce by rule 33
	OR	reduce by rule 33
	THEN	reduce by rule 33
	ELSE	reduce by rule 33
	TO	reduce by rule 33
	DO	reduce by rule 33


	.	error


state 39:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp GT exp .  (reduce by rule 31)
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	EOF	reduce by rule 31
	COMMA	reduce by rule 31
	SEMICOLON	reduce by rule 31
	RPAREN	reduce by rule 31
	RBRACE	reduce by rule 31
	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	AND	reduce by rule 31
	OR	reduce by rule 31
	THEN	reduce by rule 31
	ELSE	reduce by rule 31
	TO	reduce by rule 31
	DO	reduce by rule 31


	.	error


state 40:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp LE exp .  (reduce by rule 34)
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	EOF	reduce by rule 34
	COMMA	reduce by rule 34
	SEMICOLON	reduce by rule 34
	RPAREN	reduce by rule 34
	RBRACE	reduce by rule 34
	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	AND	reduce by rule 34
	OR	reduce by rule 34
	THEN	reduce by rule 34
	ELSE	reduce by rule 34
	TO	reduce by rule 34
	DO	reduce by rule 34


	.	error


state 41:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp LT exp .  (reduce by rule 32)
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	EOF	reduce by rule 32
	COMMA	reduce by rule 32
	SEMICOLON	reduce by rule 32
	RPAREN	reduce by rule 32
	RBRACE	reduce by rule 32
	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	AND	reduce by rule 32
	OR	reduce by rule 32
	THEN	reduce by rule 32
	ELSE	reduce by rule 32
	TO	reduce by rule 32
	DO	reduce by rule 32


	.	error


state 42:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp NEQ exp .  (reduce by rule 30)
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	EOF	reduce by rule 30
	COMMA	reduce by rule 30
	SEMICOLON	reduce by rule 30
	RPAREN	reduce by rule 30
	RBRACE	reduce by rule 30
	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	AND	reduce by rule 30
	OR	reduce by rule 30
	THEN	reduce by rule 30
	ELSE	reduce by rule 30
	TO	reduce by rule 30
	DO	reduce by rule 30


	.	error


state 43:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp EQ exp .  (reduce by rule 29)
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	EOF	reduce by rule 29
	COMMA	reduce by rule 29
	SEMICOLON	reduce by rule 29
	RPAREN	reduce by rule 29
	RBRACE	reduce by rule 29
	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	AND	reduce by rule 29
	OR	reduce by rule 29
	THEN	reduce by rule 29
	ELSE	reduce by rule 29
	TO	reduce by rule 29
	DO	reduce by rule 29


	.	error


state 44:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp DIVIDE exp .  (reduce by rule 27)
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 



	.	reduce by rule 27


state 45:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp TIMES exp .  (reduce by rule 26)
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 



	.	reduce by rule 26


state 46:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp MINUS exp .  (reduce by rule 25)
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	TIMES	shift 24
	DIVIDE	shift 23


	.	reduce by rule 25


state 47:

	mathExp : exp . PLUS exp 
	mathExp : exp PLUS exp .  (reduce by rule 24)
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	TIMES	shift 24
	DIVIDE	shift 23


	.	reduce by rule 24


state 48:

	exp : LET decs IN . exp_seq END 

	LPAREN	shift 60

	exp_seq	goto 59

	.	error


state 49:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 61
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 50:

	exp : WHILE exp DO . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 62
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 51:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 63
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 52:

	exp : LPAREN exp RPAREN .  (reduce by rule 12)



	.	reduce by rule 12


state 53:

	exp : ID ASSIGN exp .  (reduce by rule 17)
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 17


state 54:

	exp : ID LBRACE record_args . RBRACE 

	RBRACE	shift 64


	.	error


state 55:

	record_args : ID . EQ exp 
	record_args : ID . EQ exp COMMA record_args 

	EQ	shift 65


	.	error


state 56:

	func_exp : ID LPAREN func_args . RPAREN 

	RPAREN	shift 66


	.	error


state 57:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 
	func_args : exp .  (reduce by rule 4)
	func_args : exp . COMMA func_args 

	COMMA	shift 67
	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 4


state 58:

	func_exp : ID LPAREN RPAREN .  (reduce by rule 8)



	.	reduce by rule 8


state 59:

	exp : LET decs IN exp_seq . END 

	END	shift 68


	.	error


state 60:

	exp_seq : LPAREN . exp_list RPAREN 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 70
	exp_list	goto 69
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 61:

	exp : FOR ID ASSIGN exp . TO exp DO exp 
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15
	TO	shift 71


	.	error


state 62:

	exp : WHILE exp DO exp .  (reduce by rule 18)
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 18


state 63:

	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 16)
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 16


state 64:

	exp : ID LBRACE record_args RBRACE .  (reduce by rule 23)



	.	reduce by rule 23


state 65:

	record_args : ID EQ . exp 
	record_args : ID EQ . exp COMMA record_args 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 73
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 66:

	func_exp : ID LPAREN func_args RPAREN .  (reduce by rule 9)



	.	reduce by rule 9


state 67:

	func_args : exp COMMA . func_args 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 57
	mathExp	goto 2
	func_exp	goto 1
	func_args	goto 74

	.	error


state 68:

	exp : LET decs IN exp_seq END .  (reduce by rule 21)



	.	reduce by rule 21


state 69:

	exp_seq : LPAREN exp_list . RPAREN 

	RPAREN	shift 75


	.	error


state 70:

	exp_list : exp . SEMICOLON exp_list 
	exp_list : exp .  (reduce by rule 3)
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	SEMICOLON	shift 76
	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 3


state 71:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 77
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 72:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 78
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 73:

	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 
	record_args : ID EQ exp .  (reduce by rule 6)
	record_args : ID EQ exp . COMMA record_args 

	COMMA	shift 79
	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 6


state 74:

	func_args : exp COMMA func_args .  (reduce by rule 5)



	.	reduce by rule 5


state 75:

	exp_seq : LPAREN exp_list RPAREN .  (reduce by rule 1)



	.	reduce by rule 1


state 76:

	exp_list : exp SEMICOLON . exp_list 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 70
	exp_list	goto 80
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 77:

	exp : FOR ID ASSIGN exp TO exp . DO exp 
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15
	DO	shift 81


	.	error


state 78:

	exp : IF exp THEN exp ELSE exp .  (reduce by rule 15)
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 15


state 79:

	record_args : ID EQ exp COMMA . record_args 

	ID	shift 55

	record_args	goto 82

	.	error


state 80:

	exp_list : exp SEMICOLON exp_list .  (reduce by rule 2)



	.	reduce by rule 2


state 81:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 14
	INT	shift 13
	STRING	shift 12
	LPAREN	shift 11
	MINUS	shift 10
	IF	shift 9
	WHILE	shift 8
	FOR	shift 7
	LET	shift 6
	BREAK	shift 5
	NIL	shift 4

	exp	goto 83
	mathExp	goto 2
	func_exp	goto 1

	.	error


state 82:

	record_args : ID EQ exp COMMA record_args .  (reduce by rule 7)



	.	reduce by rule 7


state 83:

	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 19)
	mathExp : exp . PLUS exp 
	mathExp : exp . MINUS exp 
	mathExp : exp . TIMES exp 
	mathExp : exp . DIVIDE exp 
	mathExp : exp . EQ exp 
	mathExp : exp . NEQ exp 
	mathExp : exp . GT exp 
	mathExp : exp . LT exp 
	mathExp : exp . GE exp 
	mathExp : exp . LE exp 
	mathExp : exp . AND exp 
	mathExp : exp . OR exp 

	PLUS	shift 26
	MINUS	shift 25
	TIMES	shift 24
	DIVIDE	shift 23
	EQ	shift 22
	NEQ	shift 21
	LT	shift 20
	LE	shift 19
	GT	shift 18
	GE	shift 17
	AND	shift 16
	OR	shift 15


	.	reduce by rule 19


state 84:


	EOF	accept


	.	error

328 of 711 action table entries left after compaction
96 goto table entries
